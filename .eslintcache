[{"/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/index.js":"1","/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/App.js":"2","/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/components/Header/Header.js":"3","/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/components/DropdownButton/DropdownButton.js":"4","/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/components/Listen/Listen.js":"5","/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/components/CardList/CardList.js":"6","/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/components/Card/Card.js":"7","/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/listennotes-array.js":"8","/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/context/PodcastContext.js":"9","/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/utils/category-list.js":"10"},{"size":214,"mtime":1610317492000,"results":"11","hashOfConfig":"12"},{"size":2951,"mtime":1616204340000,"results":"13","hashOfConfig":"12"},{"size":2016,"mtime":1615318044000,"results":"14","hashOfConfig":"12"},{"size":785,"mtime":1610916359000,"results":"15","hashOfConfig":"16"},{"size":1763,"mtime":1610916359000,"results":"17","hashOfConfig":"16"},{"size":612,"mtime":1615333769000,"results":"18","hashOfConfig":"12"},{"size":2321,"mtime":1615335083000,"results":"19","hashOfConfig":"12"},{"size":31988,"mtime":1611024518000,"results":"20","hashOfConfig":"12"},{"size":383,"mtime":1611436563000,"results":"21","hashOfConfig":"12"},{"size":8419,"mtime":1615260230000,"results":"22","hashOfConfig":"12"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"1q9gpa0",{"filePath":"26","messages":"27","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"25"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"25"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1rpirmv",{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/index.js",[],["47","48"],"/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/App.js",["49","50","51","52","53","54"],"import React, { useState, useEffect } from 'react';\n// import CardList from './/components/CardList/CardList';\nimport axios from 'axios';\nimport './App.css';\nimport CardList from './components/CardList/CardList';\nimport Header from './components/Header/Header';\nimport listenNotesPodcasts from './listennotes-array';\nimport { PodcastProvider } from './context/PodcastContext';\nimport { PodcastContext } from './context/PodcastContext';\n\nfunction App() {\n\tconst [ state, setState ] = useState({\n\t\tpodcasts: []\n\t});\n\n\tconst getApiData = (genreId) => {\n\t\t// let genreId = 67;\n\t\tconsole.log(genreId, 'genreId Listen');\n\t\tlet page = 1;\n\t\tfetch(\n\t\t\t'https://listen-api.listennotes.com/api/v2/best_podcasts?genre_id=' +\n\t\t\t\tgenreId +\n\t\t\t\t'&page=' +\n\t\t\t\tpage +\n\t\t\t\t'&region=us&safe_mode=0',\n\t\t\t{\n\t\t\t\tmethod: 'GET',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t'X-ListenAPI-Key': process.env.REACT_APP_LISTEN_NOTES_API_KEY\n\t\t\t\t},\n\t\t\t\tcredentials: 'same-origin'\n\t\t\t}\n\t\t).then((response) => {\n\t\t\tresponse.json().then((data) => {\n\t\t\t\tconsole.log(data, 'main data from listen notes');\n\t\t\t\tconst getRating = async () => {\n\t\t\t\t\tfor (let pod of data.podcasts) {\n\t\t\t\t\t\tconst id = pod.id;\n\t\t\t\t\t\tconst response = await axios({\n\t\t\t\t\t\t\tmethod: 'post',\n\t\t\t\t\t\t\turl: '/findId',\n\t\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\t\tid: id\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.then(function(response) {\n\t\t\t\t\t\t\t\tpod['rating'] = response.data.rating;\n\t\t\t\t\t\t\t\tpod['numberOfRatings'] = response.data.numberOfRatings || 'N/A';\n\t\t\t\t\t\t\t\tpod['itunes'] = response.data.itunes;\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.catch(function(error) {\n\t\t\t\t\t\t\t\tconsole.log(error);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tconst test = await setState({ podcasts: [ data.podcasts ] });\n\t\t\t\t};\n\t\t\t\tgetRating();\n\n\t\t\t\tconsole.log(data.podcasts, 'data.podcasts');\n\t\t\t});\n\t\t});\n\t};\n\n\t// useEffect(\n\t// \t() => {\n\t// \t\tfor (let pod of state.podcasts) {\n\t// \t\t\tconst id = pod.id;\n\t// \t\t\tconst response = axios({\n\t// \t\t\t\tmethod: 'post',\n\t// \t\t\t\turl: '/findId',\n\t// \t\t\t\tdata: {\n\t// \t\t\t\t\tid: id\n\t// \t\t\t\t}\n\t// \t\t\t})\n\t// \t\t\t\t.then(function(response) {\n\t// \t\t\t\t\tpod['rating'] = response.data.rating;\n\t// \t\t\t\t\tpod['numberOfRatings'] = response.data.numberOfRatings || 'N/A';\n\t// \t\t\t\t\tpod['itunes'] = response.data.itunes;\n\t// \t\t\t\t})\n\t// \t\t\t\t.catch(function(error) {\n\t// \t\t\t\t\tconsole.log(error);\n\t// \t\t\t\t});\n\t// \t\t}\n\t// \t\tconsole.log(state.podcasts, 'state ran in useEffect');\n\t// \t\tconsole.log(state.podcasts, 'state ran in useEffect');\n\t// \t},\n\t// \t[ state ]\n\t// );\n\n\t// useEffect(\n\t// \t() => {\n\t// \t\tconst test = axios({\n\t// \t\t\tmethod: 'post',\n\t// \t\t\turl: '/test',\n\t// \t\t\tdata: { id: '4872ebcafa5d477d9ee835f633defa1c' }\n\t// \t\t}).then((response) => {\n\t// \t\t\tconsole.log(response.data, 'response.data');\n\t// \t\t});\n\t// \t},\n\t// \t[ state ]\n\t// );\n\n\treturn (\n\t\t<PodcastProvider value=\"will\">\n\t\t\t<div className=\"App\">\n\t\t\t\t<div className=\"app-main\">\n\t\t\t\t\t<Header podcasts={state.podcasts} getApiData={getApiData} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</PodcastProvider>\n\t);\n}\n\nexport default App;\n","/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/components/Header/Header.js",["55","56","57"],"import React, { useState, useEffect, useContext } from 'react';\n// import DropdownButton from '../DropdownButton/DropdownButton';\n// import Listen from '../Listen/Listen';\nimport CardList from '../CardList/CardList';\n// import Gap from '../../components/gap/Gap';\nimport { array1, array2 } from '../../utils/category-list';\nimport './Header.css';\nimport { PodcastContext } from '../../context/PodcastContext';\n\nconst Header = (props) => {\n\tconst [ podcasts, setPodcasts ] = useContext(PodcastContext);\n\tconsole.log(props, 'props in Header');\n\tconst [ value, setValue ] = useState('');\n\n\tconst handleChange = (e) => {\n\t\tsetValue(e.target.value);\n\t\tconsole.log(e.target.value);\n\t\tprops.getApiData(e.target.value);\n\t};\n\n\t// useEffect(\n\t// \t() => {\n\t// \t\tconsole.log('useeffect ran in Header.js');\n\t// \t\tsetPodcasts((podcasts) => ({\n\t// \t\t\t...podcasts,\n\t// \t\t\t// name: 'changing setpodcasts in Header after selection box changed',\n\t// \t\t\t// price: '$4751',\n\t// \t\t\t// id: 5894,\n\t// \t\t\tvalue: { value }\n\t// \t\t}));\n\t// \t},\n\t// \t[ value ]\n\t// );\n\t// console.log(array1, array2);\n\treturn (\n\t\t<div className=\"test\">\n\t\t\t<div className=\"header-main\">\n\t\t\t\t<h1>TOP PODCASTS - </h1>\n\t\t\t\t<form className=\"select\">\n\t\t\t\t\t<label>\n\t\t\t\t\t\t<span className=\"dropdown-title\">Choose a Genre</span>\n\t\t\t\t\t\t<select onChange={handleChange}>\n\t\t\t\t\t\t\t{array1.map((item) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<option key={item.id} value={item.id}>\n\t\t\t\t\t\t\t\t\t\t{item.name}\n\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</label>\n\t\t\t\t</form>\n\n\t\t\t\t<form className=\"select\">\n\t\t\t\t\t<label>\n\t\t\t\t\t\t<span className=\"dropdown-title\">Choose a Genre</span>\n\t\t\t\t\t\t<select onChange={handleChange}>\n\t\t\t\t\t\t\t{array2.map((item) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<option className=\"option\" key={item.id} value={item.id}>\n\t\t\t\t\t\t\t\t\t\t{item.name}\n\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</label>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t\t<CardList podcasts={props} category={parseInt(value)} getApiData={props.getApiData} />\n\t\t</div>\n\t);\n};\n\nexport default Header;\n","/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/components/DropdownButton/DropdownButton.js",[],["58","59"],"/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/components/Listen/Listen.js",["60","61"],"/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/components/CardList/CardList.js",[],"/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/components/Card/Card.js",[],"/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/listennotes-array.js",[],"/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/context/PodcastContext.js",[],"/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/utils/category-list.js",[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":1,"column":27,"nodeType":"68","messageId":"69","endLine":1,"endColumn":36},{"ruleId":"66","severity":1,"message":"70","line":5,"column":8,"nodeType":"68","messageId":"69","endLine":5,"endColumn":16},{"ruleId":"66","severity":1,"message":"71","line":7,"column":8,"nodeType":"68","messageId":"69","endLine":7,"endColumn":27},{"ruleId":"66","severity":1,"message":"72","line":9,"column":10,"nodeType":"68","messageId":"69","endLine":9,"endColumn":24},{"ruleId":"66","severity":1,"message":"73","line":40,"column":13,"nodeType":"68","messageId":"69","endLine":40,"endColumn":21},{"ruleId":"66","severity":1,"message":"74","line":56,"column":12,"nodeType":"68","messageId":"69","endLine":56,"endColumn":16},{"ruleId":"66","severity":1,"message":"67","line":1,"column":27,"nodeType":"68","messageId":"69","endLine":1,"endColumn":36},{"ruleId":"66","severity":1,"message":"75","line":11,"column":10,"nodeType":"68","messageId":"69","endLine":11,"endColumn":18},{"ruleId":"66","severity":1,"message":"76","line":11,"column":20,"nodeType":"68","messageId":"69","endLine":11,"endColumn":31},{"ruleId":"62","replacedBy":"77"},{"ruleId":"64","replacedBy":"78"},{"ruleId":"66","severity":1,"message":"67","line":1,"column":27,"nodeType":"68","messageId":"69","endLine":1,"endColumn":36},{"ruleId":"66","severity":1,"message":"79","line":9,"column":8,"nodeType":"68","messageId":"69","endLine":9,"endColumn":21},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'CardList' is defined but never used.","'listenNotesPodcasts' is defined but never used.","'PodcastContext' is defined but never used.","'response' is assigned a value but never used.","'test' is assigned a value but never used.","'podcasts' is assigned a value but never used.","'setPodcasts' is assigned a value but never used.",["80"],["81"],"'onClickChange' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]