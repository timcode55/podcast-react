[{"/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/index.js":"1","/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/App.js":"2","/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/category-list.js":"3","/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/components/Header/Header.js":"4","/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/components/DropdownButton/DropdownButton.js":"5","/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/utils/splitCategories.js":"6","/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/components/Listen/Listen.js":"7","/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/components/CardList/CardList.js":"8","/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/components/Card/Card.js":"9","/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/listennotes-array.js":"10","/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/context/PodcastContext.js":"11"},{"size":214,"mtime":1610317492000,"results":"12","hashOfConfig":"13"},{"size":2565,"mtime":1611440007000,"results":"14","hashOfConfig":"13"},{"size":8197,"mtime":1610319216000,"results":"15","hashOfConfig":"13"},{"size":2158,"mtime":1611441738000,"results":"16","hashOfConfig":"13"},{"size":785,"mtime":1610916359000,"results":"17","hashOfConfig":"13"},{"size":602,"mtime":1610412459000,"results":"18","hashOfConfig":"13"},{"size":1763,"mtime":1610916359000,"results":"19","hashOfConfig":"13"},{"size":772,"mtime":1611437624000,"results":"20","hashOfConfig":"13"},{"size":2194,"mtime":1611441563000,"results":"21","hashOfConfig":"13"},{"size":31988,"mtime":1611024518000,"results":"22","hashOfConfig":"13"},{"size":383,"mtime":1611436563000,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1rpirmv",{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/index.js",[],["53","54"],"/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/App.js",["55","56","57"],"import React, { useEffect, useState } from 'react';\n// import CardList from './/components/CardList/CardList';\nimport axios from 'axios';\nimport './App.css';\nimport CardList from './components/CardList/CardList';\nimport Header from './components/Header/Header';\nimport listenNotesPodcasts from './listennotes-array';\nimport { PodcastProvider } from './context/PodcastContext';\nimport { PodcastContext } from './context/PodcastContext';\n\nfunction App() {\n\tconst [ state, setState ] = useState({\n\t\tpodcasts: []\n\t});\n\n\tconst getPodcasts = () => {\n\t\taxios.get('/podcasts').then((response) => {\n\t\t\tconsole.log('button clicked');\n\t\t\tsetState({ podcasts: [ response.data ] });\n\t\t\tconsole.log(response.data);\n\t\t});\n\t};\n\n\tconst getTopTwenty = () => {\n\t\taxios.get('/topTwenty').then((response) => {\n\t\t\tconsole.log('button clicked');\n\t\t\tsetState({ podcasts: [ response.data ] });\n\t\t\tconsole.log(response.data);\n\t\t});\n\t};\n\n\tconst getListenNotes = () => {\n\t\tconsole.log(listenNotesPodcasts, 'listennotesarray');\n\t\tsetState({ podcasts: [ listenNotesPodcasts ] });\n\n\t\tfor (let pod of listenNotesPodcasts) {\n\t\t\taxios\n\t\t\t\t.post('/addpodcast', {\n\t\t\t\t\ttitle: pod.title,\n\t\t\t\t\timage: pod.image,\n\t\t\t\t\trating: '',\n\t\t\t\t\tnumberOfRatings: '',\n\t\t\t\t\tgenre: '',\n\t\t\t\t\tdescription: pod.description,\n\t\t\t\t\twebsite: pod.website,\n\t\t\t\t\titunes: '',\n\t\t\t\t\tcategoryid: '',\n\t\t\t\t\titunesid: pod.itunes_id,\n\t\t\t\t\tlistennotesurl: pod.listennotes_url\n\t\t\t\t})\n\t\t\t\t.then((response) => {\n\t\t\t\t\tconsole.log(response.data);\n\t\t\t\t});\n\t\t}\n\t\tgetItunesData();\n\t};\n\n\tconst getItunesData = async () => {\n\t\tconst iTunesUrlArray = [];\n\t\tfor (let pod of listenNotesPodcasts) {\n\t\t\ttry {\n\t\t\t\tconst response = await axios.get(`https://itunes.apple.com/lookup?id=${pod.itunes_id}`);\n\t\t\t\tiTunesUrlArray.push(response.data.results[0].trackViewUrl);\n\t\t\t} catch (error) {\n\t\t\t\tiTunesUrlArray.push('https://podcasts.apple.com');\n\t\t\t}\n\t\t}\n\n\t\tconsole.log('iTunesUrlArray', iTunesUrlArray);\n\t\taxios.post('/itunesdb', { urls: iTunesUrlArray }).then(function(response) {\n\t\t\tconsole.log(response.data);\n\t\t});\n\t};\n\n\treturn (\n\t\t<PodcastProvider value=\"will\">\n\t\t\t<div className=\"App\">\n\t\t\t\t<div className=\"app-main\">\n\t\t\t\t\t<h1>TOP PODCASTS</h1>\n\t\t\t\t\t<button onClick={getPodcasts}>Get Podcasts</button>\n\t\t\t\t\t<button onClick={getTopTwenty}>Get Top Twenty</button>\n\t\t\t\t\t<button onClick={getListenNotes}>Get Listen Notes</button>\n\t\t\t\t\t<button onClick={getItunesData}>Get Itunes Data</button>\n\t\t\t\t\t<Header podcasts={state.podcasts} />\n\t\t\t\t</div>\n\t\t\t\t{/* <CardList podcasts={state.podcasts} /> */}\n\t\t\t</div>\n\t\t</PodcastProvider>\n\t);\n}\n\nexport default App;\n","/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/category-list.js",[],["58","59"],"/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/components/Header/Header.js",["60","61"],"import React, { useState, useEffect, useContext } from 'react';\n// import DropdownButton from '../DropdownButton/DropdownButton';\n// import Listen from '../Listen/Listen';\nimport CardList from '../CardList/CardList';\n// import Gap from '../../components/gap/Gap';\nimport { array1, array2 } from '../../utils/splitCategories';\nimport './Header.css';\nimport { PodcastContext } from '../../context/PodcastContext';\n\nconst Header = (props) => {\n\tconst [ podcasts, setPodcasts ] = useContext(PodcastContext);\n\tconsole.log(props, 'props in Header');\n\tconst [ value, setValue ] = useState('');\n\n\tconst handleChange = (e) => {\n\t\tsetValue(e.target.value);\n\t\t// setPodcasts({ name: 'changing setpodcasts in Header after selection box changed', price: '$4751', id: 5894 });\n\t\t// setPodcasts((podcasts) => ({\n\t\t// \t...podcasts,\n\t\t// \tname: 'changing setpodcasts in Header after selection box changed',\n\t\t// \tprice: '$4751',\n\t\t// \tid: 5894,\n\t\t// \tvalue: { value }\n\t\t// }));\n\t};\n\n\tuseEffect(\n\t\t() => {\n\t\t\tconsole.log('useeffect ran in Header.js');\n\t\t\tsetPodcasts((podcasts) => ({\n\t\t\t\t...podcasts,\n\t\t\t\tname: 'changing setpodcasts in Header after selection box changed',\n\t\t\t\tprice: '$4751',\n\t\t\t\tid: 5894,\n\t\t\t\tvalue: { value }\n\t\t\t}));\n\t\t},\n\t\t[ value ]\n\t);\n\t// console.log(array1, array2);\n\treturn (\n\t\t<div className=\"test\">\n\t\t\t<div className=\"header-main\">\n\t\t\t\t<form className=\"select\">\n\t\t\t\t\t<label>\n\t\t\t\t\t\t<span className=\"dropdown-title\">Choose a Genre</span>\n\t\t\t\t\t\t<select onChange={handleChange}>\n\t\t\t\t\t\t\t{array1.map((item) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<option key={item.id} value={item.id}>\n\t\t\t\t\t\t\t\t\t\t{item.name}\n\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</label>\n\t\t\t\t</form>\n\n\t\t\t\t<form className=\"select\">\n\t\t\t\t\t<label>\n\t\t\t\t\t\t<span className=\"dropdown-title\">Choose a Genre</span>\n\t\t\t\t\t\t<select onChange={handleChange}>\n\t\t\t\t\t\t\t{array2.map((item) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<option className=\"option\" key={item.id} value={item.id}>\n\t\t\t\t\t\t\t\t\t\t{item.name}\n\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</label>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t\t<CardList podcasts={props} category={parseInt(value)} />\n\t\t</div>\n\t);\n};\n\nexport default Header;\n","/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/components/DropdownButton/DropdownButton.js",[],["62","63"],"/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/utils/splitCategories.js",[],"/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/components/Listen/Listen.js",["64","65"],"/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/components/CardList/CardList.js",["66"],"import React, { useContext, useEffect } from 'react';\nimport './CardList.css';\nimport Card from '../Card/Card';\nimport { PodcastContext } from '../../context/PodcastContext';\n\nconst CardList = (props) => {\n\tconst [ podcasts, setPodcasts ] = useContext(PodcastContext);\n\tuseEffect(() => {\n\t\tsetPodcasts({ name: 'Testing adding this', price: '$50', id: 25336 });\n\t}, []);\n\n\tconsole.log(props, 'props ion cardlist');\n\treturn (\n\t\t<div className=\"CardList\">\n\t\t\t{props.podcasts.podcasts[0] ? (\n\t\t\t\tprops.podcasts.podcasts[0].map((pod) => <Card key={pod.id} podcast={pod} />)\n\t\t\t) : null}\n\t\t\t{props.category === 251 ? (\n\t\t\t\t<h1>This works, category is football</h1>\n\t\t\t) : (\n\t\t\t\t<h1>Category is not football - {podcasts.name}</h1>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default CardList;\n","/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/components/Card/Card.js",["67","68"],"import React, { useContext, useEffect } from 'react';\nimport './Card.css';\nimport icons8 from '../../images/Hashtag-26-52px/icons8-hashtag-52.png';\nimport rating from '../../images/Star-24-48px/icons8-star-48.png';\nimport { PodcastContext } from '../../context/PodcastContext';\n\nconst Card = (props) => {\n\tconst [ podcasts, setPodcasts ] = useContext(PodcastContext);\n\tconsole.log(props, 'props in Card');\n\tuseEffect(() => {\n\t\tsetPodcasts({ name: 'adding stuff from the card component', price: '$1000', id: 7843 });\n\t}, []);\n\n\treturn (\n\t\t<div className=\"podcontainer\">\n\t\t\t<div className=\"image\">\n\t\t\t\t<a href={props.podcast.url} target=\"_blank\" rel=\"noreferrer\">\n\t\t\t\t\t<img\n\t\t\t\t\t\tclassName=\"podimage\"\n\t\t\t\t\t\tsrc={\n\t\t\t\t\t\t\tprops.podcast.image ? (\n\t\t\t\t\t\t\t\tprops.podcast.image\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t'https://upload.wikimedia.org/wikipedia/en/4/4b/The_Joe_Rogan_Experience_logo.jpg'\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t\talt=\"pod1\"\n\t\t\t\t\t/>\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t\t<div className=\"podtitle\">\n\t\t\t\t<h1>{props.podcast.title.substring(0, 52)}</h1>\n\t\t\t</div>\n\t\t\t<div className=\"desc\">\n\t\t\t\t<p className=\"ptext\">{props.podcast.description.substring(0, 200).replace(/(<([^>]+)>)/gi, '')}...</p>\n\t\t\t</div>\n\t\t\t<div className=\"podButtons\">\n\t\t\t\t<div className=\"webButton\">\n\t\t\t\t\t<a href={props.podcast.website} target=\"_blank\" rel=\"noreferrer\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tsetPodcasts({ name: 'changed state after click', price: '$541', id: 7391 });\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tWebsite\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"webButton\">\n\t\t\t\t\t<a href={props.podcast.itunes} target=\"_blank\" rel=\"noreferrer\">\n\t\t\t\t\t\t<button>iTunes Link</button>\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"contratings\">\n\t\t\t\t<div className=\"footeritem\">\n\t\t\t\t\t<img className=\"ratingimage\" src={icons8} alt=\"ratingimage\" />\n\t\t\t\t\t<p className=\"ratingtext\"># of Ratings</p>\n\t\t\t\t\t<p className=\"ratingtext\">{props.podcast.numberOfRatings}</p>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"footeritem\">\n\t\t\t\t\t<img className=\"ratingimage\" src={rating} alt=\"ratingimage\" />\n\t\t\t\t\t<p className=\"ratingtext\">iTunes Rating</p>\n\t\t\t\t\t<p className=\"ratingtext\">{props.podcast.rating}</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Card;\n","/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/listennotes-array.js",[],"/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/context/PodcastContext.js",[],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":1,"column":17,"nodeType":"75","messageId":"76","endLine":1,"endColumn":26},{"ruleId":"73","severity":1,"message":"77","line":5,"column":8,"nodeType":"75","messageId":"76","endLine":5,"endColumn":16},{"ruleId":"73","severity":1,"message":"78","line":9,"column":10,"nodeType":"75","messageId":"76","endLine":9,"endColumn":24},{"ruleId":"69","replacedBy":"79"},{"ruleId":"71","replacedBy":"80"},{"ruleId":"73","severity":1,"message":"81","line":11,"column":10,"nodeType":"75","messageId":"76","endLine":11,"endColumn":18},{"ruleId":"82","severity":1,"message":"83","line":38,"column":3,"nodeType":"84","endLine":38,"endColumn":12,"suggestions":"85"},{"ruleId":"69","replacedBy":"86"},{"ruleId":"71","replacedBy":"87"},{"ruleId":"73","severity":1,"message":"74","line":1,"column":27,"nodeType":"75","messageId":"76","endLine":1,"endColumn":36},{"ruleId":"73","severity":1,"message":"88","line":9,"column":8,"nodeType":"75","messageId":"76","endLine":9,"endColumn":21},{"ruleId":"82","severity":1,"message":"83","line":10,"column":5,"nodeType":"84","endLine":10,"endColumn":7,"suggestions":"89"},{"ruleId":"73","severity":1,"message":"81","line":8,"column":10,"nodeType":"75","messageId":"76","endLine":8,"endColumn":18},{"ruleId":"82","severity":1,"message":"83","line":12,"column":5,"nodeType":"84","endLine":12,"endColumn":7,"suggestions":"90"},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'CardList' is defined but never used.","'PodcastContext' is defined but never used.",["91"],["92"],"'podcasts' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setPodcasts'. Either include it or remove the dependency array.","ArrayExpression",["93"],["91"],["92"],"'onClickChange' is assigned a value but never used.",["94"],["95"],"no-global-assign","no-unsafe-negation",{"desc":"96","fix":"97"},{"desc":"98","fix":"99"},{"desc":"98","fix":"100"},"Update the dependencies array to be: [setPodcasts, value]",{"range":"101","text":"102"},"Update the dependencies array to be: [setPodcasts]",{"range":"103","text":"104"},{"range":"105","text":"104"},[1225,1234],"[setPodcasts, value]",[365,367],"[setPodcasts]",[520,522]]